{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\FrontEnd\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\FrontEnd\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Login from './components/login/login';\nimport Register from './components/register/register';\nimport Custom from './components/customisation/custom';\nimport Header from './components/header/header';\nimport ComputerGrids from './components/computerSelect/computerGrids';\nimport ItemGrids from './components/itemListGrid/itemGrids';\nimport Home from './components/home/home';\nimport LaptopType from './components/computerSelect/laptopType';\nimport DesktopType from './components/computerSelect/desktopType';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  //model of la\n  //type of laptop or desktop\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.modelInfo = [];\n    _this.computerInfo = [];\n    _this.state = {\n      currentView: \"home\",\n      itemData: []\n    };\n    _this.handleThumbnailClicked = _this.handleThumbnailClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleComputerType = _this.handleComputerType.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLoginClicked = _this.handleLoginClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleGoToReg = _this.handleGoToReg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDesktopClick = _this.handleDesktopClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLaptopClick = _this.handleLaptopClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHomeClick = _this.handleHomeClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleThumbnailClicked\",\n    value: function handleThumbnailClicked(key) {\n      console.log(\"item with id:\" + key + \" was clicked\");\n      if (this.state.currentView !== \"itemList\") return;\n      this.setState({\n        currentView: \"itemView\"\n      });\n      var len = this.state.itemData.length;\n      this.modelInfo = [];\n\n      for (var i = 0; i < len; i++) {\n        if (this.state.itemData[i].computerID === key) {\n          this.modelInfo.push(this.state.itemData[i]);\n        }\n      }\n    }\n  }, {\n    key: \"handleComputerType\",\n    value: function handleComputerType(computerType, computerDevice) {\n      console.log(\"item with id:\" + computerType + \" was clicked\");\n      console.log(\"app \" + computerDevice);\n      if (this.state.currentView !== \"laptop\" && this.state.currentView !== \"desktop\") return;\n      this.setState({\n        currentView: \"itemList\"\n      });\n      var len = this.state.itemData.length;\n      this.computerInfo = [];\n\n      for (var i = 0; i < len; i++) {\n        if (this.state.itemData[i].type === computerType && this.state.itemData[i].device === computerDevice) {\n          this.computerInfo.push(this.state.itemData[i]);\n        }\n      }\n    }\n  }, {\n    key: \"handleLoginClicked\",\n    value: function handleLoginClicked() {\n      this.setState({\n        currentView: \"login\"\n      });\n    }\n  }, {\n    key: \"handleGoToReg\",\n    value: function handleGoToReg() {\n      this.setState({\n        currentView: \"register\"\n      });\n    }\n  }, {\n    key: \"handleDesktopClick\",\n    value: function handleDesktopClick() {\n      this.setState({\n        currentView: \"desktop\"\n      });\n    }\n  }, {\n    key: \"handleLaptopClick\",\n    value: function handleLaptopClick() {\n      this.setState({\n        currentView: \"laptop\"\n      });\n    }\n  }, {\n    key: \"handleHomeClick\",\n    value: function handleHomeClick() {\n      this.setState({\n        currentView: \"home\"\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('/api/v1.0/computers').then(function (res) {\n        return res.json();\n      }).then(function (itemData) {\n        return _this2.setState({\n          itemData: itemData\n        }, function () {\n          return console.log(\"Item fetched... \", itemData);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var whatToRender;\n\n      if (this.state.currentView === \"itemList\") {\n        whatToRender = React.createElement(ItemGrids, {\n          items: this.computerInfo,\n          onClick: this.handleThumbnailClicked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      } else if (this.state.currentView === \"laptop\") {\n        whatToRender = React.createElement(ComputerGrids, {\n          items: LaptopType.items,\n          onClick: this.handleComputerType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        });\n      } else if (this.state.currentView === \"desktop\") {\n        whatToRender = React.createElement(ComputerGrids, {\n          items: DesktopType.items,\n          onClick: this.handleComputerType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        });\n      } else if (this.state.currentView === \"itemView\") {\n        whatToRender = React.createElement(Custom, {\n          theDevice: this.modelInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      } else if (this.state.currentView === \"login\") {\n        whatToRender = React.createElement(Login, {\n          onClick: this.handleGoToReg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      } else if (this.state.currentView === \"register\") {\n        whatToRender = React.createElement(Register, {\n          onClick: this.handleLoginClicked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        });\n      } else if (this.state.currentView === \"home\") {\n        whatToRender = React.createElement(Home, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n      }\n\n      console.log(this.modelInfo);\n      console.log(this.computerInfo);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Header, {\n        onClick: this.handleLoginClicked,\n        onDesktopClick: this.handleDesktopClick,\n        onLaptopClick: this.handleLaptopClick,\n        onHomeClick: this.handleHomeClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), whatToRender);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\salah\\Desktop\\abdos-2018\\FrontEnd\\src\\App.js"],"names":["React","Component","Login","Register","Custom","Header","ComputerGrids","ItemGrids","Home","LaptopType","DesktopType","App","props","modelInfo","computerInfo","state","currentView","itemData","handleThumbnailClicked","bind","handleComputerType","handleLoginClicked","handleGoToReg","handleDesktopClick","handleLaptopClick","handleHomeClick","key","console","log","setState","len","length","i","computerID","push","computerType","computerDevice","type","device","fetch","then","res","json","whatToRender","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Login from './components/login/login';\r\nimport Register from './components/register/register';\r\nimport Custom from './components/customisation/custom';\r\nimport Header from './components/header/header';\r\nimport ComputerGrids from './components/computerSelect/computerGrids';\r\nimport ItemGrids from './components/itemListGrid/itemGrids';\r\nimport Home from './components/home/home';\r\n\r\n\r\nimport LaptopType from './components/computerSelect/laptopType';\r\nimport DesktopType from './components/computerSelect/desktopType';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  modelInfo = []; //model of la\r\n  computerInfo = [] //type of laptop or desktop\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentView: \"home\",\r\n      itemData: []\r\n    };\r\n\r\n    this.handleThumbnailClicked = this.handleThumbnailClicked.bind(this);\r\n    this.handleComputerType = this.handleComputerType.bind(this);\r\n    this.handleLoginClicked = this.handleLoginClicked.bind(this);\r\n    this.handleGoToReg = this.handleGoToReg.bind(this);\r\n    this.handleDesktopClick = this.handleDesktopClick.bind(this);\r\n    this.handleLaptopClick = this.handleLaptopClick.bind(this);\r\n    this.handleHomeClick = this.handleHomeClick.bind(this);\r\n  }\r\n\r\n  handleThumbnailClicked(key) {\r\n\r\n    console.log(\"item with id:\" + key + \" was clicked\");\r\n\r\n    if (this.state.currentView !== \"itemList\")\r\n      return;\r\n\r\n    this.setState({ currentView: \"itemView\" });\r\n    let len = this.state.itemData.length;\r\n    this.modelInfo = []\r\n\r\n    for (let i = 0; i < len; i++) {\r\n\r\n      if (this.state.itemData[i].computerID === key) {\r\n        this.modelInfo.push(this.state.itemData[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleComputerType(computerType,computerDevice) {\r\n\r\n    console.log(\"item with id:\" + computerType + \" was clicked\");\r\n    console.log(\"app \" + computerDevice)\r\n\r\n    if (this.state.currentView !== \"laptop\" && this.state.currentView !== \"desktop\")\r\n      return;\r\n\r\n    this.setState({ currentView: \"itemList\" });\r\n    let len = this.state.itemData.length;\r\n    this.computerInfo = []\r\n\r\n    for (let i = 0; i < len; i++) {\r\n\r\n      if (this.state.itemData[i].type === computerType && this.state.itemData[i].device === computerDevice) {\r\n        this.computerInfo.push(this.state.itemData[i]);\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n  handleLoginClicked(){\r\n    this.setState({ currentView: \"login\" });\r\n  }\r\n\r\n  handleGoToReg(){\r\n    this.setState({ currentView: \"register\" });\r\n  }\r\n\r\n  handleDesktopClick(){\r\n    this.setState({ currentView: \"desktop\"});\r\n  }\r\n\r\n  handleLaptopClick(){\r\n    this.setState({ currentView: \"laptop\"});\r\n  }\r\n\r\n  handleHomeClick(){\r\n    this.setState({currentView: \"home\"});\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('/api/v1.0/computers')\r\n    .then(res => res.json())\r\n    .then(itemData => this.setState({itemData}, () => console.log(`Item fetched... `,\r\n    itemData)))\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let whatToRender;\r\n\r\n    if (this.state.currentView === \"itemList\") {\r\n      whatToRender = <ItemGrids items={this.computerInfo} onClick={this.handleThumbnailClicked} />\r\n    }\r\n    else if (this.state.currentView === \"laptop\") {\r\n      whatToRender = <ComputerGrids items={LaptopType.items} onClick={this.handleComputerType} />\r\n    }\r\n    else if (this.state.currentView === \"desktop\") {\r\n      whatToRender = <ComputerGrids items={DesktopType.items} onClick={this.handleComputerType} />\r\n    }\r\n    else if (this.state.currentView === \"itemView\") {\r\n      whatToRender = <Custom theDevice={this.modelInfo} />\r\n    }\r\n    else if(this.state.currentView ===\"login\"){\r\n      whatToRender =<Login onClick={this.handleGoToReg}/>\r\n    }\r\n    else if (this.state.currentView === \"register\"){\r\n      whatToRender = <Register onClick={this.handleLoginClicked}/>\r\n    }\r\n    else if (this.state.currentView === \"home\"){\r\n      whatToRender = <Home />\r\n    }\r\n    \r\n\r\n\r\n    console.log(this.modelInfo)\r\n    console.log(this.computerInfo)\r\n\r\n    return (\r\n      <div>\r\n        <Header onClick={this.handleLoginClicked} onDesktopClick={this.handleDesktopClick} onLaptopClick={this.handleLaptopClick} onHomeClick={this.handleHomeClick}/>\r\n        {whatToRender}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}