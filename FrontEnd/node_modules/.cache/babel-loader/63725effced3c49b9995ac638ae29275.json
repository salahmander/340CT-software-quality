{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\salah\\\\Desktop\\\\abdos-2018\\\\src\\\\components\\\\laptopSelect\\\\laptopGrids.js\";\nimport React, { Component } from 'react';\nimport LaptopSelect from './laptopSelect';\nimport { Grid, Row, Col } from 'react-bootstrap';\n\nvar LaptopGrids =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LaptopGrids, _Component);\n\n  function LaptopGrids() {\n    _classCallCheck(this, LaptopGrids);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LaptopGrids).apply(this, arguments));\n  }\n\n  _createClass(LaptopGrids, [{\n    key: \"GridRow\",\n    value: function GridRow(cards, id) {\n      var _this = this;\n\n      if (cards == null) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, cards.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(LaptopSelect, {\n          image: item.image,\n          title: item.title,\n          description: item.description,\n          CPU: item.CPU,\n          GPU: item.GPU,\n          RAM: item.RAM,\n          Storage: item.Storage,\n          Size: item.Size,\n          price: item.price,\n          onClick: _this.props.onClick,\n          id: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        })))));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.items == null) {\n        return null;\n      }\n\n      var allRows = [];\n      var len = this.props.items.length;\n      var totalRows = len / 2;\n      var countRows = 0;\n\n      while (countRows < totalRows) {\n        var newRow = [];\n\n        for (var i = 0; i < 2; i++) {\n          if (i + countRows * 2 < len) newRow.push(this.props.items[i + countRows * 2]);\n        }\n\n        countRows++;\n        allRows.push(this.GridRow(newRow, countRows));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, allRows);\n    }\n  }]);\n\n  return LaptopGrids;\n}(Component);\n\nexport default LaptopGrids;","map":{"version":3,"sources":["C:\\Users\\salah\\Desktop\\abdos-2018\\src\\components\\laptopSelect\\laptopGrids.js"],"names":["React","Component","LaptopSelect","Grid","Row","Col","LaptopGrids","cards","id","map","item","image","title","description","CPU","GPU","RAM","Storage","Size","price","props","onClick","items","allRows","len","length","totalRows","countRows","newRow","i","push","GridRow"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;;IAEMC,W;;;;;;;;;;;;;4BAEMC,K,EAAOC,E,EAAI;AAAA;;AAEf,UAAID,KAAK,IAAI,IAAb,EAAmB;AACf,eAAO,IAAP;AACH;;AAED,aACI;AAAK,QAAA,GAAG,EAAEC,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD;AAAA,eACP;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACF,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAEE,IAAI,CAACC,KAA1B;AACI,UAAA,KAAK,EAAED,IAAI,CAACE,KADhB;AAEI,UAAA,WAAW,EAAEF,IAAI,CAACG,WAFtB;AAGI,UAAA,GAAG,EAAEH,IAAI,CAACI,GAHd;AAII,UAAA,GAAG,EAAEJ,IAAI,CAACK,GAJd;AAKI,UAAA,GAAG,EAAEL,IAAI,CAACM,GALd;AAMI,UAAA,OAAO,EAAEN,IAAI,CAACO,OANlB;AAOI,UAAA,IAAI,EAAEP,IAAI,CAACQ,IAPf;AAQI,UAAA,KAAK,EAAER,IAAI,CAACS,KARhB;AASI,UAAA,OAAO,EAAE,KAAI,CAACC,KAAL,CAAWC,OATxB;AAUI,UAAA,EAAE,EAAEX,IAAI,CAACF,EAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CADJ,CADJ,CADO;AAAA,OAAV,CADL,CADJ;AA6BH;;;6BAEQ;AAEL,UAAI,KAAKY,KAAL,CAAWE,KAAX,IAAoB,IAAxB,EAA8B;AAC1B,eAAO,IAAP;AACH;;AACD,UAAIC,OAAO,GAAG,EAAd;AAEA,UAAIC,GAAG,GAAG,KAAKJ,KAAL,CAAWE,KAAX,CAAiBG,MAA3B;AAEA,UAAIC,SAAS,GAAGF,GAAG,GAAG,CAAtB;AAEA,UAAIG,SAAS,GAAG,CAAhB;;AAEA,aAAOA,SAAS,GAAGD,SAAnB,EAA8B;AAE1B,YAAIE,MAAM,GAAG,EAAb;;AAGA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,cAAIA,CAAC,GAAIF,SAAS,GAAE,CAAjB,GAAuBH,GAA1B,EACII,MAAM,CAACE,IAAP,CAAY,KAAKV,KAAL,CAAWE,KAAX,CAAiBO,CAAC,GAAIF,SAAS,GAAE,CAAjC,CAAZ;AAEP;;AAEDA,QAAAA,SAAS;AAETJ,QAAAA,OAAO,CAACO,IAAR,CAAa,KAAKC,OAAL,CAAaH,MAAb,EAAqBD,SAArB,CAAb;AACH;;AAED,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,OADL,CADJ;AAKH;;;;EAzEqBtB,S;;AA2E1B,eAAeK,WAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport LaptopSelect from './laptopSelect'\r\nimport { Grid, Row, Col } from 'react-bootstrap'\r\n\r\nclass LaptopGrids extends Component {\r\n\r\n    GridRow(cards, id) {\r\n\r\n        if (cards == null) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div key={id}>\r\n                {cards.map((item) =>\r\n                    <div key={item.id}>\r\n                        <Grid>\r\n                            <Row>\r\n                                <Col>\r\n                                    <LaptopSelect image={item.image}\r\n                                        title={item.title}\r\n                                        description={item.description}\r\n                                        CPU={item.CPU}\r\n                                        GPU={item.GPU}\r\n                                        RAM={item.RAM}\r\n                                        Storage={item.Storage}\r\n                                        Size={item.Size}\r\n                                        price={item.price}\r\n                                        onClick={this.props.onClick}\r\n                                        id={item.id}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Grid>\r\n\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.items == null) {\r\n            return null;\r\n        }\r\n        var allRows = [];\r\n\r\n        var len = this.props.items.length;\r\n\r\n        var totalRows = len / 2;\r\n\r\n        var countRows = 0;\r\n\r\n        while (countRows < totalRows) {\r\n\r\n            let newRow = [];\r\n\r\n\r\n            for (var i = 0; i < 2; i++) {\r\n                if((i + (countRows *2)) < len)\r\n                    newRow.push(this.props.items[i + (countRows *2)]);\r\n\r\n            }\r\n\r\n            countRows++;\r\n\r\n            allRows.push(this.GridRow(newRow, countRows));\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {allRows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LaptopGrids;"]},"metadata":{},"sourceType":"module"}